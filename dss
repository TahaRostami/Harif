using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2_3
{
    public class Program
    {
        public static void Main(string[] args)
        {
            int[] A = { 5, 0, 6, 2, 4, 4, 9, 7, 1, 7 };
            int k = 5;
            int ires = Algo(A, k);
            Console.WriteLine(ires);
            Console.ReadLine();
        }

        public static int Algo(int[] A, int k)
        {
            if (k > A.Length || k < 1)
            {
                throw new ArgumentOutOfRangeException();
            }

            if (k == 1 || k == A.Length)
            {
                return 0;
            }

            int[] mins = new int[k - 1];//index
            int[] maxs = new int[k - 1];//index

            int max = k - 1;//index
            int min = k - 1;//index
            int ires = 0;

            mins[0] = k - 1;//index
            maxs[0] = k - 1;//index
            int p = 0;

            //i=0
            for (int i = k - 2; i > 0; i--)
            {
                mins[p + 1] = A[mins[p]] > A[i] ? i : mins[p];
                maxs[p + 1] = A[maxs[p]] > A[i] ? maxs[p] : i;
                p++;
            }

            if (A[0] < A[mins[k - 2]])
            {
                min = 0;
            }
            else
            {
                min = mins[k - 2];
            }
            if (A[0] > A[maxs[k - 2]])
            {
                max = 0;
            }
            else
            {
                max = maxs[k - 2];
            }

            p = 0;

            for (int i = 1; i < A.Length - k + 1; i++)
            {
                int M = maxs[k - 2];//local max
                int m = mins[k - 2];//local min

                if (i > A.Length - 2 * k + 2)
                {
                    p++;
                }

                for (int j = k - 2; j > p; j--)
                {

                    mins[j] = A[mins[j - 1]] > A[i + k - 1] ? i + k - 1 : mins[j - 1];
                    maxs[j] = A[maxs[j - 1]] < A[i + k - 1] ? i + k - 1 : maxs[j - 1];
                }
                mins[0] = i + k - 1;
                maxs[0] = i + k - 1;

                if (A[i + k - 1] < A[m])
                {
                    m = i + k - 1;
                }
                else
                {
                    //nothing
                }

                if (A[i + k - 1] > A[M])
                {
                    M = i + k - 1;
                }
                else
                {
                    //nothing
                }


                if (A[max] - A[min] < A[M] - A[m])
                {
                    max = M;
                    min = m;
                    ires = i;
                }


            }


            return ires;
        }

    }
}
